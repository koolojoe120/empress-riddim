{"version":3,"file":"ios.js","sourceRoot":"","sources":["../../src/ios.ts"],"names":[],"mappings":"AAEA,MAAM,OAAO,WAAW;IAGtB,KAAK,CAAC,GAAG;QACP,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QACjC,MAAM,KAAK,GAAG,IAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAC;QAE1D,OAAO,EAAE,KAAK,EAAE,CAAC;IACnB,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,MAAM,oCAAoC,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,GAAG,CAAC,OAAmB;QAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC3D,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IAED,MAAM;QACJ,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;YACnC,OAAO,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,IAAI,MAAM,CAAC;SAC3D;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,CAAC,KAAa;QAClB,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;YACnC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,GAAG,KAAK,CAAC;SAClD;IACH,CAAC;IAED,0BAA0B,CAAC,UAAkB;QAC3C,MAAM,CAAC,GAAG,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEvD,IAAI,CAAC,CAAC,EAAE;YACN,OAAO,CAAC,CAAC;SACV;QAED,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAEzC,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;YACxB,OAAO,CAAC,CAAC;SACV;QAED,OAAO,MAAM,GAAG,GAAG,CAAC;IACtB,CAAC;IAED,0BAA0B,CAAC,GAAW;QACpC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;IACrC,CAAC;;AAjDe,2BAAe,GAAG,QAAQ,CAAC","sourcesContent":["import type { GetResult, SetOptions, TextZoomPlugin } from './definitions';\n\nexport class TextZoomIOS implements TextZoomPlugin {\n  static readonly TEXT_SIZE_REGEX = /(\\d+)%/;\n\n  async get(): Promise<GetResult> {\n    const percentage = this.getRaw();\n    const value = this.textSizePercentageToNumber(percentage);\n\n    return { value };\n  }\n\n  async getPreferred(): Promise<never> {\n    throw 'Native implementation will be used';\n  }\n\n  async set(options: SetOptions): Promise<void> {\n    const num = this.textSizeNumberToPercentage(options.value);\n    this.setRaw(num);\n  }\n\n  getRaw(): string {\n    if (typeof document !== 'undefined') {\n      return document.body.style.webkitTextSizeAdjust || '100%';\n    }\n    return '100%';\n  }\n\n  setRaw(value: string): void {\n    if (typeof document !== 'undefined') {\n      document.body.style.webkitTextSizeAdjust = value;\n    }\n  }\n\n  textSizePercentageToNumber(percentage: string): number {\n    const m = TextZoomIOS.TEXT_SIZE_REGEX.exec(percentage);\n\n    if (!m) {\n      return 1;\n    }\n\n    const parsed = Number.parseInt(m[1], 10);\n\n    if (Number.isNaN(parsed)) {\n      return 1;\n    }\n\n    return parsed / 100;\n  }\n\n  textSizeNumberToPercentage(num: number): string {\n    return `${Math.round(num * 100)}%`;\n  }\n}\n"]}