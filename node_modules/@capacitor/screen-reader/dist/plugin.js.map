{"version":3,"file":"plugin.js","sources":["esm/index.js","esm/web.js"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\nconst ScreenReader = registerPlugin('ScreenReader', {\n    web: () => import('./web').then(m => new m.ScreenReaderWeb()),\n});\nexport * from './definitions';\nexport { ScreenReader };\n//# sourceMappingURL=index.js.map","import { WebPlugin } from '@capacitor/core';\nexport class ScreenReaderWeb extends WebPlugin {\n    async isEnabled() {\n        throw this.unavailable('This feature is not available in the browser.');\n    }\n    async speak(options) {\n        if (!('speechSynthesis' in window)) {\n            throw this.unavailable('Browser does not support the SpeechSynthesis API');\n        }\n        const utterance = new SpeechSynthesisUtterance(options.value);\n        if (options.language) {\n            utterance.lang = options.language;\n        }\n        speechSynthesis.speak(utterance);\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["registerPlugin","WebPlugin"],"mappings":";;;AACK,UAAC,YAAY,GAAGA,mBAAc,CAAC,cAAc,EAAE;IACpD,IAAI,GAAG,EAAE,MAAM,mDAAe,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACjE,CAAC;;ICFM,MAAM,eAAe,SAASC,cAAS,CAAC;IAC/C,IAAI,MAAM,SAAS,GAAG;IACtB,QAAQ,MAAM,IAAI,CAAC,WAAW,CAAC,+CAA+C,CAAC;IAC/E;IACA,IAAI,MAAM,KAAK,CAAC,OAAO,EAAE;IACzB,QAAQ,IAAI,EAAE,iBAAiB,IAAI,MAAM,CAAC,EAAE;IAC5C,YAAY,MAAM,IAAI,CAAC,WAAW,CAAC,kDAAkD,CAAC;IACtF;IACA,QAAQ,MAAM,SAAS,GAAG,IAAI,wBAAwB,CAAC,OAAO,CAAC,KAAK,CAAC;IACrE,QAAQ,IAAI,OAAO,CAAC,QAAQ,EAAE;IAC9B,YAAY,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC,QAAQ;IAC7C;IACA,QAAQ,eAAe,CAAC,KAAK,CAAC,SAAS,CAAC;IACxC;IACA;;;;;;;;;;;;;;;"}